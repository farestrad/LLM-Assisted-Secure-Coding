import axios from 'axios';

export class VulnerabilityDatabaseProvider {
    private static API_BASE_URL = 'https://cveawg.mitre.org/api/cve';

    /**
     * Fetch CVE details by ID.
     * @param cveId - The CVE ID to fetch (e.g., CVE-2023-1234).
     * @returns Promise with the CVE details as a JSON object.
     */
    public async fetchCveDetails(cveId: string): Promise<any> {
        try {
            const response = await axios.get(`${VulnerabilityDatabaseProvider.API_BASE_URL}/${cveId}`);
            return response.data; // Return the data part of the response
        } catch (error) {
            if (axios.isAxiosError(error)) {
                // Axios-specific error handling
                console.error(`Axios error: ${error.message}`);
                throw new Error(`Failed to fetch CVE details: ${error.message}`);
            } else if (error instanceof Error) {
                // General error handling
                console.error(`Error: ${error.message}`);
                throw new Error(`Failed to fetch CVE details: ${error.message}`);
            } else {
                // Unknown error
                console.error('Unknown error occurred:', error);
                throw new Error('An unknown error occurred while fetching CVE details.');
            }
        }
    }


    public async fetchMultipleCveDetails(vulnerabilityType: string): Promise<any[]> {
        try {
            // Search for CVEs related to the vulnerability type
            const response = await axios.get(
                `https://cveawg.mitre.org/api/cves/2.0?keyword=${encodeURIComponent(vulnerabilityType)}`
            );
            return response.data.vulnerabilities || [];
        } catch (error) {
            console.error(`Error fetching CVEs for ${vulnerabilityType}:`, error);
            return [];
        }
    }
}
